"""Initial migration

Revision ID: c0cb9c35d2be
Revises: 
Create Date: 2025-07-16 11:56:16.316978

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c0cb9c35d2be'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('email', sa.String(length=30), nullable=False),
    sa.Column('display_name', sa.String(length=30), nullable=False),
    sa.Column('psw_hash', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('work_duration', sa.Integer(), nullable=True),
    sa.Column('short_break_duration', sa.Integer(), nullable=True),
    sa.Column('long_break_duration', sa.Integer(), nullable=True),
    sa.Column('sessions_until_long_break', sa.Integer(), nullable=True),
    sa.Column('default_focu_mode', sa.String(length=30), nullable=False),
    sa.Column('auto_start_breaks', sa.Boolean(), nullable=False),
    sa.Column('distraction_blocking_enabled', sa.Boolean(), nullable=False),
    sa.Column('daily_pomodoro_goal', sa.Integer(), nullable=False),
    sa.Column('daily_focus_time_goal', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_display_name'), ['display_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=False)

    op.create_table('groups',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('color', sa.String(length=7), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('groups', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_groups_id'), ['id'], unique=False)

    op.create_table('pomodoro_stats',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timeframe', sa.Enum('daily', 'weekly', 'monthly', 'yearly', name='stats_timeframe_enum'), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('total_sessions_planned', sa.Integer(), nullable=False),
    sa.Column('total_sessions_completed', sa.Integer(), nullable=False),
    sa.Column('total_sessions_abandoned', sa.Integer(), nullable=False),
    sa.Column('work_sessions_completed', sa.Integer(), nullable=False),
    sa.Column('work_sessions_abandoned', sa.Integer(), nullable=False),
    sa.Column('short_breaks_completed', sa.Integer(), nullable=False),
    sa.Column('long_breaks_completed', sa.Integer(), nullable=False),
    sa.Column('breaks_skipped', sa.Integer(), nullable=False),
    sa.Column('total_focus_time', sa.Integer(), nullable=False),
    sa.Column('total_planned_time', sa.Integer(), nullable=False),
    sa.Column('total_break_time', sa.Integer(), nullable=False),
    sa.Column('total_pause_time', sa.Integer(), nullable=False),
    sa.Column('avg_focus_quality', sa.Float(), nullable=True),
    sa.Column('avg_productivity_rating', sa.Float(), nullable=True),
    sa.Column('avg_energy_before', sa.Float(), nullable=True),
    sa.Column('avg_energy_after', sa.Float(), nullable=True),
    sa.Column('total_interruptions', sa.Integer(), nullable=False),
    sa.Column('avg_interruptions_per_session', sa.Float(), nullable=True),
    sa.Column('total_interruption_time', sa.Integer(), nullable=False),
    sa.Column('completion_rate', sa.Float(), nullable=True),
    sa.Column('avg_session_length', sa.Float(), nullable=True),
    sa.Column('efficiency_score', sa.Float(), nullable=True),
    sa.Column('current_streak_days', sa.Integer(), nullable=False),
    sa.Column('longest_streak_days', sa.Integer(), nullable=False),
    sa.Column('streak_active', sa.Boolean(), nullable=False),
    sa.Column('most_productive_hour', sa.Integer(), nullable=True),
    sa.Column('least_productive_hour', sa.Integer(), nullable=True),
    sa.Column('peak_focus_day', sa.Date(), nullable=True),
    sa.Column('tasks_completed_during_session', sa.Integer(), nullable=False),
    sa.Column('tasks_worked_on', sa.Integer(), nullable=False),
    sa.Column('avg_task_completion_rate', sa.Float(), nullable=True),
    sa.Column('daily_session_goal', sa.Integer(), nullable=True),
    sa.Column('daily_time_goal', sa.Integer(), nullable=True),
    sa.Column('goal_achievement_rate', sa.Float(), nullable=True),
    sa.Column('focus_consistency_score', sa.Float(), nullable=True),
    sa.Column('improvement_trend', sa.Float(), nullable=True),
    sa.Column('burnout_risk_score', sa.Float(), nullable=True),
    sa.Column('location_stats', sa.JSON(), nullable=True),
    sa.Column('ambient_sound_stats', sa.JSON(), nullable=True),
    sa.Column('time_of_day_stats', sa.JSON(), nullable=True),
    sa.Column('recommendations', sa.JSON(), nullable=True),
    sa.Column('insights', sa.JSON(), nullable=True),
    sa.Column('last_calculated', sa.DateTime(), nullable=False),
    sa.Column('calculation_version', sa.String(length=10), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('pomodoro_stats', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_pomodoro_stats_id'), ['id'], unique=False)

    op.create_table('tags',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('color', sa.String(length=7), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tags_id'), ['id'], unique=False)

    op.create_table('user_tokens',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('jti', sa.String(length=36), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('token_type', sa.String(length=50), nullable=False),
    sa.Column('revoked', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_tokens', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_tokens_jti'), ['jti'], unique=True)

    op.create_table('tasks',
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('priority', sa.Enum('low', 'medium', 'high', 'urgent', name='task_priority'), nullable=False),
    sa.Column('status', sa.Enum('pending', 'in_progress', 'completed', 'archived', 'cancelled', name='task_status'), nullable=False),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('is_in_my_day', sa.Boolean(), nullable=True),
    sa.Column('starred', sa.Boolean(), nullable=True),
    sa.Column('estimated_pomodoros', sa.Integer(), nullable=True),
    sa.Column('completed_pomodoros', sa.Integer(), nullable=True),
    sa.Column('estimated_focus_time', sa.Integer(), nullable=True),
    sa.Column('actual_focus_time', sa.Integer(), nullable=True),
    sa.Column('complexity_level', sa.Integer(), nullable=True),
    sa.Column('requires_deep_focus', sa.Boolean(), nullable=True),
    sa.Column('optimal_session_length', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tasks_id'), ['id'], unique=False)

    op.create_table('focus_sessions',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('focus_mode', sa.Enum('deep_work', 'shallow_work', 'creative', 'learning', 'planning', 'review', name='focus_mode'), nullable=False),
    sa.Column('status', sa.Enum('pending', 'in_progress', 'paused', 'completed', 'abandoned', name='focus_session_status'), nullable=False),
    sa.Column('planned_duration', sa.Integer(), nullable=True),
    sa.Column('minimum_duration', sa.Integer(), nullable=False),
    sa.Column('maximum_duration', sa.Integer(), nullable=False),
    sa.Column('actual_duration', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('paused_at', sa.DateTime(), nullable=True),
    sa.Column('pause_duration', sa.Integer(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('flow_state_achieved', sa.Boolean(), nullable=False),
    sa.Column('flow_state_duration', sa.Integer(), nullable=True),
    sa.Column('deep_work_percentage', sa.Float(), nullable=True),
    sa.Column('focus_intensity', sa.Integer(), nullable=True),
    sa.Column('distraction_level', sa.Enum('minimal', 'low', 'moderate', 'high', 'overwhelming', name='distraction_level'), nullable=True),
    sa.Column('interruption_count', sa.Integer(), nullable=False),
    sa.Column('self_interruption_count', sa.Integer(), nullable=False),
    sa.Column('external_interruption_count', sa.Integer(), nullable=False),
    sa.Column('objectives_set', sa.Text(), nullable=True),
    sa.Column('objectives_achieved', sa.Text(), nullable=True),
    sa.Column('session_notes', sa.Text(), nullable=True),
    sa.Column('insights_gained', sa.Text(), nullable=True),
    sa.Column('tasks_completed', sa.Integer(), nullable=False),
    sa.Column('words_written', sa.Integer(), nullable=True),
    sa.Column('code_commits', sa.Integer(), nullable=True),
    sa.Column('pages_read', sa.Integer(), nullable=True),
    sa.Column('environment_settings', sa.JSON(), nullable=True),
    sa.Column('apps_blocked', sa.JSON(), nullable=True),
    sa.Column('websites_blocked', sa.JSON(), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('energy_before', sa.Integer(), nullable=True),
    sa.Column('energy_after', sa.Integer(), nullable=True),
    sa.Column('mood_before', sa.Integer(), nullable=True),
    sa.Column('mood_after', sa.Integer(), nullable=True),
    sa.Column('break_intervals', sa.JSON(), nullable=True),
    sa.Column('break_activities', sa.JSON(), nullable=True),
    sa.Column('break_effectiveness', sa.Integer(), nullable=True),
    sa.Column('overall_satisfaction', sa.Integer(), nullable=True),
    sa.Column('would_repeat_setup', sa.Boolean(), nullable=True),
    sa.Column('project_category', sa.String(length=100), nullable=True),
    sa.Column('complexity_level', sa.Integer(), nullable=True),
    sa.Column('collaboration_involved', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    with op.batch_alter_table('focus_sessions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_focus_sessions_id'), ['id'], unique=False)

    op.create_table('pomodoro_sessions',
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('session_type', sa.Enum('work', 'short_break', 'long_break', name='pomodoro_session_type'), nullable=False),
    sa.Column('status', sa.Enum('pending', 'in_progress', 'paused', 'completed', 'abandoned', 'interrupted', name='pomodoro_session_status'), nullable=False),
    sa.Column('planned_duration', sa.Integer(), nullable=False),
    sa.Column('actual_duration', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('paused_at', sa.DateTime(), nullable=True),
    sa.Column('resumed_at', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('focus_quality_rating', sa.Integer(), nullable=True),
    sa.Column('productivity_rating', sa.Integer(), nullable=True),
    sa.Column('energy_before', sa.Integer(), nullable=True),
    sa.Column('energy_after', sa.Integer(), nullable=True),
    sa.Column('interruption_count', sa.Integer(), nullable=False),
    sa.Column('interruption_total_time', sa.Integer(), nullable=False),
    sa.Column('interruption_type', sa.Enum('internal', 'external', 'technical', 'emergency', name='interruption_type'), nullable=True),
    sa.Column('session_notes', sa.Text(), nullable=True),
    sa.Column('accomplishments', sa.Text(), nullable=True),
    sa.Column('distraction_log', sa.Text(), nullable=True),
    sa.Column('ambient_sound_used', sa.Text(), nullable=True),
    sa.Column('location', sa.Text(), nullable=True),
    sa.Column('device_used', sa.Text(), nullable=True),
    sa.Column('break_activity', sa.Text(), nullable=True),
    sa.Column('break_completed', sa.Boolean(), nullable=False),
    sa.Column('session_sequence', sa.Integer(), nullable=True),
    sa.Column('session_until_long_break', sa.Integer(), nullable=True),
    sa.Column('session_until_short_break', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    with op.batch_alter_table('pomodoro_sessions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_pomodoro_sessions_id'), ['id'], unique=False)

    op.create_table('subtasks',
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('subtasks', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_subtasks_id'), ['id'], unique=False)
        batch_op.create_index('ix_subtasks_task_id', ['task_id'], unique=False)
        batch_op.create_index('ix_subtasks_task_position', ['task_id', 'position'], unique=False)

    op.create_table('task_tags',
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('task_tags', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_task_tags_id'), ['id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('task_tags', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_task_tags_id'))

    op.drop_table('task_tags')
    with op.batch_alter_table('subtasks', schema=None) as batch_op:
        batch_op.drop_index('ix_subtasks_task_position')
        batch_op.drop_index('ix_subtasks_task_id')
        batch_op.drop_index(batch_op.f('ix_subtasks_id'))

    op.drop_table('subtasks')
    with op.batch_alter_table('pomodoro_sessions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_pomodoro_sessions_id'))

    op.drop_table('pomodoro_sessions')
    with op.batch_alter_table('focus_sessions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_focus_sessions_id'))

    op.drop_table('focus_sessions')
    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tasks_id'))

    op.drop_table('tasks')
    with op.batch_alter_table('user_tokens', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_tokens_jti'))

    op.drop_table('user_tokens')
    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tags_id'))

    op.drop_table('tags')
    with op.batch_alter_table('pomodoro_stats', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_pomodoro_stats_id'))

    op.drop_table('pomodoro_stats')
    with op.batch_alter_table('groups', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_groups_id'))

    op.drop_table('groups')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_id'))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.drop_index(batch_op.f('ix_users_display_name'))

    op.drop_table('users')
    # ### end Alembic commands ### 