{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/thecoderbee/Documents/my_projects/flowdo/frontend/flowdo/src/sample/tasks.ts"],"sourcesContent":["export interface Tag {\n  id: string;\n  name: string;\n  color: string;\n}\n\nexport type TaskPriority = 'low' | 'medium' | 'high' | 'urgent';\n\nexport interface Task {\n  id: string;\n  title: string;\n  description: string;\n  completed: boolean;\n  createdAt: string;\n  dueDate: string | null;\n  priority: TaskPriority;\n  tags: Tag[];\n  estimatedPomodoros: number;\n  completedPomodoros: number;\n  groupId?: string;\n}\n\nexport interface TaskGroup {\n  id: string;\n  name: string;\n}\n\nexport const sampleTags: Tag[] = [\n  { id: 'tag1', name: 'Work', color: '#51557E' },\n  { id: 'tag2', name: 'Personal', color: '#816797' },\n  { id: 'tag3', name: 'Urgent', color: '#D14343' },\n  { id: 'tag4', name: 'Learning', color: '#43A047' },\n  { id: 'tag5', name: 'Project', color: '#1565C0' },\n  { id: 'tag6', name: 'Meeting', color: '#FFA000' },\n];\n\nexport const sampleGroups: TaskGroup[] = [\n  { id: 'group1', name: 'Frontend Tasks' },\n  { id: 'group2', name: 'Backend Tasks' },\n  { id: 'group3', name: 'Personal Projects' },\n];\n\nexport const sampleTasks: Task[] = [\n  {\n    id: 'task1',\n    title: 'Implement user authentication',\n    description: 'Create login and registration forms with proper validation',\n    completed: false,\n    createdAt: '2023-10-15T10:30:00Z',\n    dueDate: '2023-10-25T17:00:00Z',\n    priority: 'high',\n    tags: [sampleTags[0], sampleTags[4]],\n    estimatedPomodoros: 5,\n    completedPomodoros: 2,\n    groupId: 'group1',\n  },\n  {\n    id: 'task2',\n    title: 'Design database schema',\n    description: 'Create ERD and implement database models',\n    completed: true,\n    createdAt: '2023-10-14T09:15:00Z',\n    dueDate: '2023-10-20T16:00:00Z',\n    priority: 'medium',\n    tags: [sampleTags[0], sampleTags[4]],\n    estimatedPomodoros: 4,\n    completedPomodoros: 4,\n    groupId: 'group2',\n  },\n  {\n    id: 'task3',\n    title: 'Weekly team meeting',\n    description: 'Discuss project progress and upcoming milestones',\n    completed: false,\n    createdAt: '2023-10-16T14:00:00Z',\n    dueDate: '2023-10-18T15:30:00Z',\n    priority: 'medium',\n    tags: [sampleTags[0], sampleTags[5]],\n    estimatedPomodoros: 2,\n    completedPomodoros: 0,\n    groupId: 'group1',\n  },\n  {\n    id: 'task4',\n    title: 'Learn React Server Components',\n    description: 'Complete tutorial on Next.js 14 Server Components',\n    completed: false,\n    createdAt: '2023-10-12T12:00:00Z',\n    dueDate: '2023-10-30T23:59:59Z',\n    priority: 'low',\n    tags: [sampleTags[3]],\n    estimatedPomodoros: 6,\n    completedPomodoros: 2,\n  },\n  {\n    id: 'task5',\n    title: 'Fix navigation bug in mobile view',\n    description: 'The navbar dropdown menu disappears when clicking outside on mobile devices',\n    completed: false,\n    createdAt: '2023-10-17T09:00:00Z',\n    dueDate: '2023-10-19T17:00:00Z',\n    priority: 'urgent',\n    tags: [sampleTags[0], sampleTags[2]],\n    estimatedPomodoros: 3,\n    completedPomodoros: 0,\n    groupId: 'group1',\n  },\n  {\n    id: 'task6',\n    title: 'Grocery shopping',\n    description: 'Buy fruits, vegetables, and other essentials',\n    completed: false,\n    createdAt: '2023-10-17T10:00:00Z',\n    dueDate: '2023-10-18T20:00:00Z',\n    priority: 'medium',\n    tags: [sampleTags[1]],\n    estimatedPomodoros: 1,\n    completedPomodoros: 0,\n  },\n  {\n    id: 'task7',\n    title: 'Implement API endpoints for tasks',\n    description: 'Create REST API endpoints for CRUD operations on tasks',\n    completed: false,\n    createdAt: '2023-10-15T15:45:00Z',\n    dueDate: '2023-10-24T17:00:00Z',\n    priority: 'high',\n    tags: [sampleTags[0], sampleTags[4]],\n    estimatedPomodoros: 4,\n    completedPomodoros: 1,\n    groupId: 'group2',\n  },\n];"],"names":[],"mappings":";;;;;AA2BO,MAAM,aAAoB;IAC/B;QAAE,IAAI;QAAQ,MAAM;QAAQ,OAAO;IAAU;IAC7C;QAAE,IAAI;QAAQ,MAAM;QAAY,OAAO;IAAU;IACjD;QAAE,IAAI;QAAQ,MAAM;QAAU,OAAO;IAAU;IAC/C;QAAE,IAAI;QAAQ,MAAM;QAAY,OAAO;IAAU;IACjD;QAAE,IAAI;QAAQ,MAAM;QAAW,OAAO;IAAU;IAChD;QAAE,IAAI;QAAQ,MAAM;QAAW,OAAO;IAAU;CACjD;AAEM,MAAM,eAA4B;IACvC;QAAE,IAAI;QAAU,MAAM;IAAiB;IACvC;QAAE,IAAI;QAAU,MAAM;IAAgB;IACtC;QAAE,IAAI;QAAU,MAAM;IAAoB;CAC3C;AAEM,MAAM,cAAsB;IACjC;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,WAAW;QACX,WAAW;QACX,SAAS;QACT,UAAU;QACV,MAAM;YAAC,UAAU,CAAC,EAAE;YAAE,UAAU,CAAC,EAAE;SAAC;QACpC,oBAAoB;QACpB,oBAAoB;QACpB,SAAS;IACX;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,WAAW;QACX,WAAW;QACX,SAAS;QACT,UAAU;QACV,MAAM;YAAC,UAAU,CAAC,EAAE;YAAE,UAAU,CAAC,EAAE;SAAC;QACpC,oBAAoB;QACpB,oBAAoB;QACpB,SAAS;IACX;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,WAAW;QACX,WAAW;QACX,SAAS;QACT,UAAU;QACV,MAAM;YAAC,UAAU,CAAC,EAAE;YAAE,UAAU,CAAC,EAAE;SAAC;QACpC,oBAAoB;QACpB,oBAAoB;QACpB,SAAS;IACX;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,WAAW;QACX,WAAW;QACX,SAAS;QACT,UAAU;QACV,MAAM;YAAC,UAAU,CAAC,EAAE;SAAC;QACrB,oBAAoB;QACpB,oBAAoB;IACtB;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,WAAW;QACX,WAAW;QACX,SAAS;QACT,UAAU;QACV,MAAM;YAAC,UAAU,CAAC,EAAE;YAAE,UAAU,CAAC,EAAE;SAAC;QACpC,oBAAoB;QACpB,oBAAoB;QACpB,SAAS;IACX;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,WAAW;QACX,WAAW;QACX,SAAS;QACT,UAAU;QACV,MAAM;YAAC,UAAU,CAAC,EAAE;SAAC;QACrB,oBAAoB;QACpB,oBAAoB;IACtB;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,WAAW;QACX,WAAW;QACX,SAAS;QACT,UAAU;QACV,MAAM;YAAC,UAAU,CAAC,EAAE;YAAE,UAAU,CAAC,EAAE;SAAC;QACpC,oBAAoB;QACpB,oBAAoB;QACpB,SAAS;IACX;CACD","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///home/thecoderbee/Documents/my_projects/flowdo/frontend/flowdo/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gLACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":["file:///home/thecoderbee/Documents/my_projects/flowdo/frontend/flowdo/src/components/tasks/task-dialog.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { format } from 'date-fns';\nimport { AlertCircle, Clock, Flag, Timer } from 'lucide-react';\nimport { Task } from '@/sample/tasks';\nimport { cn } from '@/lib/utils';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\n\ninterface TaskDialogProps {\n  task: Task;\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n}\n\nexport function TaskDialog({ task, open, onOpenChange }: TaskDialogProps) {\n  const formatDate = (dateString: string | null) => {\n    if (!dateString) return 'No date set';\n    return format(new Date(dateString), 'MMM d, yyyy h:mm a');\n  };\n\n  // Get priority color and icon\n  const getPriorityDisplay = (priority: Task['priority']) => {\n    switch (priority) {\n      case 'urgent':\n        return { color: 'text-red-500', bgColor: 'bg-red-50', icon: <AlertCircle size={18} className=\"mr-1.5\" /> };\n      case 'high':\n        return { color: 'text-orange-500', bgColor: 'bg-orange-50', icon: <Flag size={18} className=\"mr-1.5\" /> };\n      case 'medium':\n        return { color: 'text-yellow-500', bgColor: 'bg-yellow-50', icon: <Flag size={18} className=\"mr-1.5\" /> };\n      case 'low':\n        return { color: 'text-blue-500', bgColor: 'bg-blue-50', icon: <Flag size={18} className=\"mr-1.5\" /> };\n      default:\n        return { color: 'text-muted-foreground', bgColor: 'bg-gray-50', icon: null };\n    }\n  };\n  \n  const priorityDisplay = getPriorityDisplay(task.priority);\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-md\">\n        <DialogHeader>\n          <div className=\"flex items-center justify-between\">\n            <DialogTitle className=\"text-2xl\">{task.title}</DialogTitle>\n            <div \n              className={cn(\n                \"flex items-center text-sm font-medium rounded-full px-3 py-1\",\n                priorityDisplay.color,\n                priorityDisplay.bgColor\n              )}\n            >\n              {priorityDisplay.icon}\n              <span className=\"capitalize\">{task.priority}</span>\n            </div>\n          </div>\n        </DialogHeader>\n\n        {/* Status indicator */}\n        <div className=\"flex items-center my-2\">\n          <div \n            className={cn(\n              \"w-3 h-3 rounded-full mr-2\",\n              task.completed ? \"bg-green-500\" : \"bg-blue-500\"\n            )}\n          />\n          <span className=\"text-base font-medium\">{task.completed ? 'Completed' : 'In Progress'}</span>\n        </div>\n        \n        {/* Pomodoro info */}\n        <div className=\"flex items-center gap-2 bg-accent/20 px-4 py-3 rounded-md my-3\">\n          <Timer size={18} className=\"text-primary\" />\n          <div className=\"flex items-baseline\">\n            <span className=\"text-lg font-bold mr-1\">{task.completedPomodoros}</span>\n            <span className=\"text-base text-muted-foreground\">/</span>\n            <span className=\"text-base ml-1\">{task.estimatedPomodoros}</span>\n          </div>\n          <span className=\"text-base ml-1\">pomodoros completed</span>\n        </div>\n        \n        {/* Description */}\n        <div className=\"text-base text-muted-foreground my-3\">\n          {task.description || \"No description provided.\"}\n        </div>\n        \n        {/* Meta information */}\n        <div className=\"grid grid-cols-2 gap-y-3 mt-4 text-base\">\n          <div className=\"flex items-center text-muted-foreground\">\n            <Clock size={16} className=\"mr-2\" />\n            <span>Created:</span>\n          </div>\n          <div>{formatDate(task.createdAt)}</div>\n          \n          <div className=\"flex items-center text-muted-foreground\">\n            <Clock size={16} className=\"mr-2\" />\n            <span>Due Date:</span>\n          </div>\n          <div>{task.dueDate ? formatDate(task.dueDate) : 'No due date'}</div>\n        </div>\n        \n        {/* Tags */}\n        {task.tags.length > 0 && (\n          <div className=\"mt-5\">\n            <h4 className=\"text-base font-medium mb-2\">Tags</h4>\n            <div className=\"flex flex-wrap gap-2\">\n              {task.tags.map(tag => (\n                <div \n                  key={tag.id}\n                  className=\"text-sm rounded-full px-3 py-1\"\n                  style={{ backgroundColor: `${tag.color}20`, color: tag.color }}\n                >\n                  {tag.name}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n        \n        <DialogFooter className=\"mt-6\">\n          <Button variant=\"outline\" onClick={() => onOpenChange(false)}>Close</Button>\n          <Button className=\"text-base\">Edit Task</Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 710, "column": 0}, "map": {"version":3,"sources":["file:///home/thecoderbee/Documents/my_projects/flowdo/frontend/flowdo/src/components/tasks/task-item.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { format } from 'date-fns';\nimport { X, AlertCircle, Clock, Flag, Timer } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { Task, Tag } from '@/sample/tasks';\nimport { TaskDialog } from './task-dialog';\n\ninterface TaskItemProps {\n  task: Task;\n  onToggleComplete: (taskId: string, completed: boolean) => void;\n  onRemoveTag: (taskId: string, tagId: string) => void;\n}\n\nexport function TaskItem({ task, onToggleComplete, onRemoveTag }: TaskItemProps) {\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  \n  const handleCheckboxChange = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    onToggleComplete(task.id, !task.completed);\n  };\n  \n  const handleTagRemove = (tagId: string, e: React.MouseEvent) => {\n    e.stopPropagation();\n    onRemoveTag(task.id, tagId);\n  };\n  \n  const formatDueDate = (dateString: string | null) => {\n    if (!dateString) return null;\n    return format(new Date(dateString), 'MMM d, yyyy');\n  };\n  \n  // Get priority color and icon\n  const getPriorityDisplay = (priority: Task['priority']) => {\n    switch (priority) {\n      case 'urgent':\n        return { color: 'text-red-500', icon: <AlertCircle size={16} className=\"mr-1\" /> };\n      case 'high':\n        return { color: 'text-orange-500', icon: <Flag size={16} className=\"mr-1\" /> };\n      case 'medium':\n        return { color: 'text-yellow-500', icon: <Flag size={16} className=\"mr-1\" /> };\n      case 'low':\n        return { color: 'text-blue-500', icon: <Flag size={16} className=\"mr-1\" /> };\n      default:\n        return { color: 'text-muted-foreground', icon: null };\n    }\n  };\n  \n  const priorityDisplay = getPriorityDisplay(task.priority);\n  const dueDate = formatDueDate(task.dueDate);\n  \n  return (\n    <>\n      <div \n        className={cn(\n          \"flex items-center rounded-lg border border-border p-4 mb-3 gap-3 cursor-pointer hover:border-primary/30 hover:bg-accent/20 transition-all\",\n          task.completed && \"opacity-60\",\n        )}\n        onClick={() => setIsDialogOpen(true)}\n      >\n        {/* Checkbox */}\n        <div \n          className={cn(\n            \"w-6 h-6 rounded-full border-2 flex items-center justify-center flex-shrink-0\",\n            task.completed ? \"bg-primary border-primary\" : \"border-muted-foreground\"\n          )}\n          onClick={handleCheckboxChange}\n        >\n          {task.completed && (\n            <svg width=\"12\" height=\"12\" viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M8.33334 2.5L3.75001 7.08333L1.66667 5\" stroke=\"white\" strokeWidth=\"1.67\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            </svg>\n          )}\n        </div>\n      \n        {/* Content */}\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"flex items-center gap-2 mb-1.5\">\n            <h3 className={cn(\n              \"text-base font-medium truncate\",\n              task.completed && \"line-through\"\n            )}>\n              {task.title}\n            </h3>\n            \n            <div className={cn(\"flex items-center text-sm font-medium\", priorityDisplay.color)}>\n              {priorityDisplay.icon}\n              <span className=\"capitalize\">{task.priority}</span>\n            </div>\n          </div>\n          \n          {/* Tags */}\n          {task.tags.length > 0 && (\n            <div className=\"flex flex-wrap gap-1 mt-1.5\">\n              {task.tags.map(tag => (\n                <div \n                  key={tag.id}\n                  className=\"flex items-center gap-1 text-sm rounded-full px-2.5 py-0.5\" \n                  style={{ backgroundColor: `${tag.color}20`, color: tag.color }}\n                >\n                  <span className=\"truncate max-w-[100px]\">{tag.name}</span>\n                  <button \n                    onClick={(e) => handleTagRemove(tag.id, e)}\n                    className=\"hover:bg-black/10 rounded-full p-0.5\"\n                  >\n                    <X size={14} />\n                  </button>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n        \n        {/* Pomodoro Counter */}\n        <div className=\"flex items-center text-sm text-muted-foreground mx-2\">\n          <Timer size={16} className=\"mr-1.5\" />\n          <span className=\"font-medium\">{task.completedPomodoros}/{task.estimatedPomodoros}</span>\n        </div>\n        \n        {/* Due Date */}\n        {dueDate && (\n          <div className=\"flex items-center text-sm text-muted-foreground ml-2\">\n            <Clock size={16} className=\"mr-1.5\" />\n            <span><span className=\"font-medium\">Due:</span> {dueDate}</span>\n          </div>\n        )}\n      </div>\n      \n      <TaskDialog \n        task={task}\n        open={isDialogOpen}\n        onOpenChange={setIsDialogOpen}\n      />\n    </>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;;;AAPA;;;;;;AAeO,SAAS,SAAS,EAAE,IAAI,EAAE,gBAAgB,EAAE,WAAW,EAAiB;;IAC7E,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,MAAM,uBAAuB,CAAC;QAC5B,EAAE,eAAe;QACjB,iBAAiB,KAAK,EAAE,EAAE,CAAC,KAAK,SAAS;IAC3C;IAEA,MAAM,kBAAkB,CAAC,OAAe;QACtC,EAAE,eAAe;QACjB,YAAY,KAAK,EAAE,EAAE;IACvB;IAEA,MAAM,gBAAgB,CAAC;QACrB,IAAI,CAAC,YAAY,OAAO;QACxB,OAAO,CAAA,GAAA,wJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,aAAa;IACtC;IAEA,8BAA8B;IAC9B,MAAM,qBAAqB,CAAC;QAC1B,OAAQ;YACN,KAAK;gBACH,OAAO;oBAAE,OAAO;oBAAgB,oBAAM,6LAAC,uNAAA,CAAA,cAAW;wBAAC,MAAM;wBAAI,WAAU;;;;;;gBAAU;YACnF,KAAK;gBACH,OAAO;oBAAE,OAAO;oBAAmB,oBAAM,6LAAC,qMAAA,CAAA,OAAI;wBAAC,MAAM;wBAAI,WAAU;;;;;;gBAAU;YAC/E,KAAK;gBACH,OAAO;oBAAE,OAAO;oBAAmB,oBAAM,6LAAC,qMAAA,CAAA,OAAI;wBAAC,MAAM;wBAAI,WAAU;;;;;;gBAAU;YAC/E,KAAK;gBACH,OAAO;oBAAE,OAAO;oBAAiB,oBAAM,6LAAC,qMAAA,CAAA,OAAI;wBAAC,MAAM;wBAAI,WAAU;;;;;;gBAAU;YAC7E;gBACE,OAAO;oBAAE,OAAO;oBAAyB,MAAM;gBAAK;QACxD;IACF;IAEA,MAAM,kBAAkB,mBAAmB,KAAK,QAAQ;IACxD,MAAM,UAAU,cAAc,KAAK,OAAO;IAE1C,qBACE;;0BACE,6LAAC;gBACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6IACA,KAAK,SAAS,IAAI;gBAEpB,SAAS,IAAM,gBAAgB;;kCAG/B,6LAAC;wBACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gFACA,KAAK,SAAS,GAAG,8BAA8B;wBAEjD,SAAS;kCAER,KAAK,SAAS,kBACb,6LAAC;4BAAI,OAAM;4BAAK,QAAO;4BAAK,SAAQ;4BAAY,MAAK;4BAAO,OAAM;sCAChE,cAAA,6LAAC;gCAAK,GAAE;gCAAyC,QAAO;gCAAQ,aAAY;gCAAO,eAAc;gCAAQ,gBAAe;;;;;;;;;;;;;;;;kCAM9H,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACd,kCACA,KAAK,SAAS,IAAI;kDAEjB,KAAK,KAAK;;;;;;kDAGb,6LAAC;wCAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,yCAAyC,gBAAgB,KAAK;;4CAC9E,gBAAgB,IAAI;0DACrB,6LAAC;gDAAK,WAAU;0DAAc,KAAK,QAAQ;;;;;;;;;;;;;;;;;;4BAK9C,KAAK,IAAI,CAAC,MAAM,GAAG,mBAClB,6LAAC;gCAAI,WAAU;0CACZ,KAAK,IAAI,CAAC,GAAG,CAAC,CAAA,oBACb,6LAAC;wCAEC,WAAU;wCACV,OAAO;4CAAE,iBAAiB,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC;4CAAE,OAAO,IAAI,KAAK;wCAAC;;0DAE7D,6LAAC;gDAAK,WAAU;0DAA0B,IAAI,IAAI;;;;;;0DAClD,6LAAC;gDACC,SAAS,CAAC,IAAM,gBAAgB,IAAI,EAAE,EAAE;gDACxC,WAAU;0DAEV,cAAA,6LAAC,+LAAA,CAAA,IAAC;oDAAC,MAAM;;;;;;;;;;;;uCATN,IAAI,EAAE;;;;;;;;;;;;;;;;kCAkBrB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,uMAAA,CAAA,QAAK;gCAAC,MAAM;gCAAI,WAAU;;;;;;0CAC3B,6LAAC;gCAAK,WAAU;;oCAAe,KAAK,kBAAkB;oCAAC;oCAAE,KAAK,kBAAkB;;;;;;;;;;;;;oBAIjF,yBACC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,uMAAA,CAAA,QAAK;gCAAC,MAAM;gCAAI,WAAU;;;;;;0CAC3B,6LAAC;;kDAAK,6LAAC;wCAAK,WAAU;kDAAc;;;;;;oCAAW;oCAAE;;;;;;;;;;;;;;;;;;;0BAKvD,6LAAC,gJAAA,CAAA,aAAU;gBACT,MAAM;gBACN,MAAM;gBACN,cAAc;;;;;;;;AAItB;GAzHgB;KAAA","debugId":null}},
    {"offset": {"line": 1024, "column": 0}, "map": {"version":3,"sources":["file:///home/thecoderbee/Documents/my_projects/flowdo/frontend/flowdo/src/components/tasks/task-form.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { Task, TaskPriority, Tag, sampleTags, sampleGroups } from '@/sample/tasks';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { X, Plus } from 'lucide-react';\n\ninterface TaskFormProps {\n  initialTask?: Task;\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onSubmit: (task: Partial<Task>) => void;\n  mode: 'create' | 'edit';\n}\n\nexport function TaskForm({ initialTask, open, onOpenChange, onSubmit, mode }: TaskFormProps) {\n  const defaultTask = {\n    title: '',\n    description: '',\n    priority: 'medium' as TaskPriority,\n    dueDate: '',\n    tags: [],\n    estimatedPomodoros: 1,\n  };\n  \n  const [formData, setFormData] = useState<Partial<Task>>(initialTask || defaultTask);\n  const [selectedTags, setSelectedTags] = useState<Tag[]>(initialTask?.tags || []);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n  \n  const handleAddTag = (tag: Tag) => {\n    if (!selectedTags.some(t => t.id === tag.id)) {\n      const newTags = [...selectedTags, tag];\n      setSelectedTags(newTags);\n      setFormData({\n        ...formData,\n        tags: newTags,\n      });\n    }\n  };\n  \n  const handleRemoveTag = (tagId: string) => {\n    const newTags = selectedTags.filter(tag => tag.id !== tagId);\n    setSelectedTags(newTags);\n    setFormData({\n      ...formData,\n      tags: newTags,\n    });\n  };\n  \n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    \n    onSubmit(formData);\n    \n    if (mode === 'create') {\n      setFormData(defaultTask);\n      setSelectedTags([]);\n    }\n    \n    setIsSubmitting(false);\n    onOpenChange(false);\n  };\n  \n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-md\">\n        <DialogHeader>\n          <DialogTitle className=\"text-xl\">{mode === 'create' ? 'Create New Task' : 'Edit Task'}</DialogTitle>\n        </DialogHeader>\n        \n        <form onSubmit={handleSubmit} className=\"space-y-4 mt-3\">\n          {/* Title */}\n          <div className=\"space-y-1.5\">\n            <label htmlFor=\"title\" className=\"text-base font-medium\">\n              Title <span className=\"text-red-500\">*</span>\n            </label>\n            <input\n              id=\"title\"\n              name=\"title\"\n              type=\"text\"\n              value={formData.title}\n              onChange={handleChange}\n              required\n              className=\"w-full rounded-md border border-border px-3 py-2.5 text-base focus:outline-none focus:ring-1 focus:ring-primary\"\n              placeholder=\"Task title\"\n            />\n          </div>\n          \n          {/* Description */}\n          <div className=\"space-y-1.5\">\n            <label htmlFor=\"description\" className=\"text-base font-medium\">\n              Description\n            </label>\n            <textarea\n              id=\"description\"\n              name=\"description\"\n              value={formData.description}\n              onChange={handleChange}\n              rows={3}\n              className=\"w-full rounded-md border border-border px-3 py-2.5 text-base focus:outline-none focus:ring-1 focus:ring-primary\"\n              placeholder=\"Add description...\"\n            />\n          </div>\n          \n          <div className=\"grid grid-cols-2 gap-4\">\n            {/* Priority */}\n            <div className=\"space-y-1.5\">\n              <label htmlFor=\"priority\" className=\"text-base font-medium\">\n                Priority\n              </label>\n              <select\n                id=\"priority\"\n                name=\"priority\"\n                value={formData.priority}\n                onChange={handleChange}\n                className=\"w-full rounded-md border border-border px-3 py-2.5 text-base focus:outline-none focus:ring-1 focus:ring-primary bg-background\"\n              >\n                <option value=\"low\">Low</option>\n                <option value=\"medium\">Medium</option>\n                <option value=\"high\">High</option>\n                <option value=\"urgent\">Urgent</option>\n              </select>\n            </div>\n            \n            {/* Due Date */}\n            <div className=\"space-y-1.5\">\n              <label htmlFor=\"dueDate\" className=\"text-base font-medium\">\n                Due Date\n              </label>\n              <input\n                id=\"dueDate\"\n                name=\"dueDate\"\n                type=\"datetime-local\"\n                value={formData.dueDate ? new Date(formData.dueDate).toISOString().slice(0, 16) : ''}\n                onChange={handleChange}\n                className=\"w-full rounded-md border border-border px-3 py-2.5 text-base focus:outline-none focus:ring-1 focus:ring-primary bg-background\"\n              />\n            </div>\n            \n            {/* Group */}\n            <div className=\"space-y-1.5\">\n              <label htmlFor=\"groupId\" className=\"text-base font-medium\">\n                Group\n              </label>\n              <select\n                id=\"groupId\"\n                name=\"groupId\"\n                value={formData.groupId || ''}\n                onChange={handleChange}\n                className=\"w-full rounded-md border border-border px-3 py-2.5 text-base focus:outline-none focus:ring-1 focus:ring-primary bg-background\"\n              >\n                <option value=\"\">No Group</option>\n                {sampleGroups.map(group => (\n                  <option key={group.id} value={group.id}>{group.name}</option>\n                ))}\n              </select>\n            </div>\n            \n            {/* Estimated Pomodoros */}\n            <div className=\"space-y-1.5\">\n              <label htmlFor=\"estimatedPomodoros\" className=\"text-base font-medium\">\n                Pomodoros\n              </label>\n              <input\n                id=\"estimatedPomodoros\"\n                name=\"estimatedPomodoros\"\n                type=\"number\"\n                min=\"1\"\n                max=\"10\"\n                value={formData.estimatedPomodoros}\n                onChange={handleChange}\n                className=\"w-full rounded-md border border-border px-3 py-2.5 text-base focus:outline-none focus:ring-1 focus:ring-primary\"\n              />\n            </div>\n          </div>\n          \n          {/* Tags */}\n          <div className=\"space-y-2.5\">\n            <label className=\"text-base font-medium\">Tags</label>\n            \n            {/* Selected Tags */}\n            <div className=\"flex flex-wrap gap-1.5 mb-2.5\">\n              {selectedTags.map(tag => (\n                <div\n                  key={tag.id}\n                  className=\"flex items-center gap-1.5 text-sm rounded-full px-3 py-1\"\n                  style={{ backgroundColor: `${tag.color}20`, color: tag.color }}\n                >\n                  <span>{tag.name}</span>\n                  <button\n                    type=\"button\"\n                    onClick={() => handleRemoveTag(tag.id)}\n                    className=\"hover:bg-black/10 rounded-full p-0.5\"\n                  >\n                    <X size={14} />\n                  </button>\n                </div>\n              ))}\n            </div>\n            \n            {/* Available Tags */}\n            <div className=\"flex flex-wrap gap-1.5\">\n              {sampleTags\n                .filter(tag => !selectedTags.some(t => t.id === tag.id))\n                .map(tag => (\n                  <button\n                    key={tag.id}\n                    type=\"button\"\n                    onClick={() => handleAddTag(tag)}\n                    className=\"flex items-center gap-1.5 text-sm rounded-full px-3 py-1 border border-dashed\"\n                    style={{ borderColor: tag.color, color: tag.color }}\n                  >\n                    <Plus size={14} />\n                    <span>{tag.name}</span>\n                  </button>\n                ))}\n            </div>\n          </div>\n          \n          <DialogFooter className=\"mt-2\">\n            <Button \n              type=\"button\" \n              variant=\"outline\" \n              onClick={() => onOpenChange(false)}\n              className=\"text-base\"\n            >\n              Cancel\n            </Button>\n            <Button type=\"submit\" disabled={isSubmitting} className=\"text-base\">\n              {mode === 'create' ? 'Create Task' : 'Update Task'}\n            </Button>\n          </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1529, "column": 0}, "map": {"version":3,"sources":["file:///home/thecoderbee/Documents/my_projects/flowdo/frontend/flowdo/src/components/tasks/task-list.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { Task, Tag } from '@/sample/tasks';\nimport { TaskItem } from './task-item';\nimport { TaskForm } from './task-form';\nimport { Button } from '@/components/ui/button';\nimport { Plus, Search } from 'lucide-react';\n\ninterface TaskListProps {\n  tasks: Task[];\n  onTaskUpdate: (updatedTask: Task) => void;\n  onTaskCreate: (newTask: Partial<Task>) => void;\n  className?: string;\n}\n\nexport function TaskList({ tasks, onTaskUpdate, onTaskCreate, className }: TaskListProps) {\n  const [isNewTaskDialogOpen, setIsNewTaskDialogOpen] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filterCompleted, setFilterCompleted] = useState<boolean | null>(null);\n  \n  const handleToggleComplete = (taskId: string, completed: boolean) => {\n    const taskToUpdate = tasks.find(t => t.id === taskId);\n    if (taskToUpdate) {\n      onTaskUpdate({\n        ...taskToUpdate,\n        completed\n      });\n    }\n  };\n  \n  const handleRemoveTag = (taskId: string, tagId: string) => {\n    const taskToUpdate = tasks.find(t => t.id === taskId);\n    if (taskToUpdate) {\n      onTaskUpdate({\n        ...taskToUpdate,\n        tags: taskToUpdate.tags.filter(tag => tag.id !== tagId)\n      });\n    }\n  };\n  \n  const handleCreateTask = (newTask: Partial<Task>) => {\n    onTaskCreate(newTask);\n  };\n  \n  // Filter tasks\n  const filteredTasks = tasks.filter(task => {\n    // Search query filter\n    const matchesSearch = searchQuery === '' || \n      task.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      task.description?.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      task.tags.some(tag => tag.name.toLowerCase().includes(searchQuery.toLowerCase()));\n    \n    // Completion status filter\n    const matchesCompletion = filterCompleted === null || task.completed === filterCompleted;\n    \n    return matchesSearch && matchesCompletion;\n  });\n  \n  return (\n    <div className={className}>\n      {/* Search and filters */}\n      <div className=\"flex flex-col sm:flex-row gap-2 mb-6\">\n        <div className=\"relative flex-grow\">\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground h-5 w-5\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search tasks...\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            className=\"pl-10 pr-4 py-2.5 w-full border border-border rounded-md text-base focus:outline-none focus:ring-1 focus:ring-primary\"\n          />\n        </div>\n        \n        <div className=\"flex gap-2\">\n          <select\n            value={filterCompleted === null ? 'all' : filterCompleted ? 'completed' : 'incomplete'}\n            onChange={(e) => {\n              const value = e.target.value;\n              setFilterCompleted(\n                value === 'all' ? null : value === 'completed'\n              );\n            }}\n            className=\"px-4 py-2.5 border border-border rounded-md text-base bg-background focus:outline-none focus:ring-1 focus:ring-primary\"\n          >\n            <option value=\"all\">All Tasks</option>\n            <option value=\"completed\">Completed</option>\n            <option value=\"incomplete\">Incomplete</option>\n          </select>\n          \n          <Button \n            onClick={() => setIsNewTaskDialogOpen(true)} \n            className=\"text-base py-2.5 px-4\"\n          >\n            <Plus className=\"h-5 w-5 mr-1.5\" />\n            New Task\n          </Button>\n        </div>\n      </div>\n      \n      {/* Task list */}\n      <div className=\"space-y-2\">\n        {filteredTasks.length > 0 ? (\n          filteredTasks.map(task => (\n            <TaskItem\n              key={task.id}\n              task={task}\n              onToggleComplete={handleToggleComplete}\n              onRemoveTag={handleRemoveTag}\n            />\n          ))\n        ) : (\n          <div className=\"text-center py-10 bg-accent/10 rounded-lg border border-border\">\n            <p className=\"text-muted-foreground text-base\">\n              {searchQuery || filterCompleted !== null\n                ? \"No matching tasks found\"\n                : \"No tasks available yet. Create a new task to get started.\"}\n            </p>\n          </div>\n        )}\n      </div>\n      \n      {/* New task dialog */}\n      <TaskForm\n        open={isNewTaskDialogOpen}\n        onOpenChange={setIsNewTaskDialogOpen}\n        onSubmit={handleCreateTask}\n        mode=\"create\"\n      />\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1745, "column": 0}, "map": {"version":3,"sources":["file:///home/thecoderbee/Documents/my_projects/flowdo/frontend/flowdo/src/app/tasks/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { sampleTasks, Task } from '@/sample/tasks';\nimport { TaskList } from '@/components/tasks/task-list';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default function TasksPage() {\n  const [tasks, setTasks] = useState<Task[]>(sampleTasks);\n  \n  const handleTaskUpdate = (updatedTask: Task) => {\n    setTasks(prevTasks => \n      prevTasks.map(task => \n        task.id === updatedTask.id ? updatedTask : task\n      )\n    );\n  };\n  \n  const handleTaskCreate = (newTask: Partial<Task>) => {\n    const createdAt = new Date().toISOString();\n    \n    const task: Task = {\n      id: uuidv4(),\n      title: newTask.title || 'New Task',\n      description: newTask.description || '',\n      completed: false,\n      createdAt,\n      dueDate: newTask.dueDate || null,\n      priority: newTask.priority || 'medium',\n      tags: newTask.tags || [],\n      estimatedPomodoros: newTask.estimatedPomodoros || 1,\n      completedPomodoros: 0,\n      groupId: newTask.groupId,\n    };\n    \n    setTasks(prevTasks => [task, ...prevTasks]);\n  };\n  \n  return (\n    <div className=\"container mx-auto px-0\">\n      <div className=\"flex justify-between items-center mb-8\">\n        <h1 className=\"text-3xl font-bold\">Tasks</h1>\n      </div>\n      \n      <TaskList \n        tasks={tasks}\n        onTaskUpdate={handleTaskUpdate}\n        onTaskCreate={handleTaskCreate}\n      />\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAOe,SAAS;;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU,yHAAA,CAAA,cAAW;IAEtD,MAAM,mBAAmB,CAAC;QACxB,SAAS,CAAA,YACP,UAAU,GAAG,CAAC,CAAA,OACZ,KAAK,EAAE,KAAK,YAAY,EAAE,GAAG,cAAc;IAGjD;IAEA,MAAM,mBAAmB,CAAC;QACxB,MAAM,YAAY,IAAI,OAAO,WAAW;QAExC,MAAM,OAAa;YACjB,IAAI,CAAA,GAAA,wLAAA,CAAA,KAAM,AAAD;YACT,OAAO,QAAQ,KAAK,IAAI;YACxB,aAAa,QAAQ,WAAW,IAAI;YACpC,WAAW;YACX;YACA,SAAS,QAAQ,OAAO,IAAI;YAC5B,UAAU,QAAQ,QAAQ,IAAI;YAC9B,MAAM,QAAQ,IAAI,IAAI,EAAE;YACxB,oBAAoB,QAAQ,kBAAkB,IAAI;YAClD,oBAAoB;YACpB,SAAS,QAAQ,OAAO;QAC1B;QAEA,SAAS,CAAA,YAAa;gBAAC;mBAAS;aAAU;IAC5C;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAG,WAAU;8BAAqB;;;;;;;;;;;0BAGrC,6LAAC,8IAAA,CAAA,WAAQ;gBACP,OAAO;gBACP,cAAc;gBACd,cAAc;;;;;;;;;;;;AAItB;GA5CwB;KAAA","debugId":null}}]
}