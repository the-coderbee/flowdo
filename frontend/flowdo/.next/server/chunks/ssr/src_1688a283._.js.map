{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/thecoderbee/Documents/my_projects/flowdo/frontend/flowdo/src/sample/tasks.ts"],"sourcesContent":["export interface Tag {\n  id: string;\n  name: string;\n  color: string;\n}\n\nexport type TaskPriority = 'low' | 'medium' | 'high' | 'urgent';\n\nexport interface Task {\n  id: string;\n  title: string;\n  description: string;\n  completed: boolean;\n  createdAt: string;\n  dueDate: string | null;\n  priority: TaskPriority;\n  tags: Tag[];\n  estimatedPomodoros: number;\n  completedPomodoros: number;\n  groupId?: string;\n}\n\nexport interface TaskGroup {\n  id: string;\n  name: string;\n}\n\nexport const sampleTags: Tag[] = [\n  { id: 'tag1', name: 'Work', color: '#51557E' },\n  { id: 'tag2', name: 'Personal', color: '#816797' },\n  { id: 'tag3', name: 'Urgent', color: '#D14343' },\n  { id: 'tag4', name: 'Learning', color: '#43A047' },\n  { id: 'tag5', name: 'Project', color: '#1565C0' },\n  { id: 'tag6', name: 'Meeting', color: '#FFA000' },\n];\n\nexport const sampleGroups: TaskGroup[] = [\n  { id: 'group1', name: 'Frontend Tasks' },\n  { id: 'group2', name: 'Backend Tasks' },\n  { id: 'group3', name: 'Personal Projects' },\n];\n\nexport const sampleTasks: Task[] = [\n  {\n    id: 'task1',\n    title: 'Implement user authentication',\n    description: 'Create login and registration forms with proper validation',\n    completed: false,\n    createdAt: '2023-10-15T10:30:00Z',\n    dueDate: '2023-10-25T17:00:00Z',\n    priority: 'high',\n    tags: [sampleTags[0], sampleTags[4]],\n    estimatedPomodoros: 5,\n    completedPomodoros: 2,\n    groupId: 'group1',\n  },\n  {\n    id: 'task2',\n    title: 'Design database schema',\n    description: 'Create ERD and implement database models',\n    completed: true,\n    createdAt: '2023-10-14T09:15:00Z',\n    dueDate: '2023-10-20T16:00:00Z',\n    priority: 'medium',\n    tags: [sampleTags[0], sampleTags[4]],\n    estimatedPomodoros: 4,\n    completedPomodoros: 4,\n    groupId: 'group2',\n  },\n  {\n    id: 'task3',\n    title: 'Weekly team meeting',\n    description: 'Discuss project progress and upcoming milestones',\n    completed: false,\n    createdAt: '2023-10-16T14:00:00Z',\n    dueDate: '2023-10-18T15:30:00Z',\n    priority: 'medium',\n    tags: [sampleTags[0], sampleTags[5]],\n    estimatedPomodoros: 2,\n    completedPomodoros: 0,\n    groupId: 'group1',\n  },\n  {\n    id: 'task4',\n    title: 'Learn React Server Components',\n    description: 'Complete tutorial on Next.js 14 Server Components',\n    completed: false,\n    createdAt: '2023-10-12T12:00:00Z',\n    dueDate: '2023-10-30T23:59:59Z',\n    priority: 'low',\n    tags: [sampleTags[3]],\n    estimatedPomodoros: 6,\n    completedPomodoros: 2,\n  },\n  {\n    id: 'task5',\n    title: 'Fix navigation bug in mobile view',\n    description: 'The navbar dropdown menu disappears when clicking outside on mobile devices',\n    completed: false,\n    createdAt: '2023-10-17T09:00:00Z',\n    dueDate: '2023-10-19T17:00:00Z',\n    priority: 'urgent',\n    tags: [sampleTags[0], sampleTags[2]],\n    estimatedPomodoros: 3,\n    completedPomodoros: 0,\n    groupId: 'group1',\n  },\n  {\n    id: 'task6',\n    title: 'Grocery shopping',\n    description: 'Buy fruits, vegetables, and other essentials',\n    completed: false,\n    createdAt: '2023-10-17T10:00:00Z',\n    dueDate: '2023-10-18T20:00:00Z',\n    priority: 'medium',\n    tags: [sampleTags[1]],\n    estimatedPomodoros: 1,\n    completedPomodoros: 0,\n  },\n  {\n    id: 'task7',\n    title: 'Implement API endpoints for tasks',\n    description: 'Create REST API endpoints for CRUD operations on tasks',\n    completed: false,\n    createdAt: '2023-10-15T15:45:00Z',\n    dueDate: '2023-10-24T17:00:00Z',\n    priority: 'high',\n    tags: [sampleTags[0], sampleTags[4]],\n    estimatedPomodoros: 4,\n    completedPomodoros: 1,\n    groupId: 'group2',\n  },\n];"],"names":[],"mappings":";;;;;AA2BO,MAAM,aAAoB;IAC/B;QAAE,IAAI;QAAQ,MAAM;QAAQ,OAAO;IAAU;IAC7C;QAAE,IAAI;QAAQ,MAAM;QAAY,OAAO;IAAU;IACjD;QAAE,IAAI;QAAQ,MAAM;QAAU,OAAO;IAAU;IAC/C;QAAE,IAAI;QAAQ,MAAM;QAAY,OAAO;IAAU;IACjD;QAAE,IAAI;QAAQ,MAAM;QAAW,OAAO;IAAU;IAChD;QAAE,IAAI;QAAQ,MAAM;QAAW,OAAO;IAAU;CACjD;AAEM,MAAM,eAA4B;IACvC;QAAE,IAAI;QAAU,MAAM;IAAiB;IACvC;QAAE,IAAI;QAAU,MAAM;IAAgB;IACtC;QAAE,IAAI;QAAU,MAAM;IAAoB;CAC3C;AAEM,MAAM,cAAsB;IACjC;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,WAAW;QACX,WAAW;QACX,SAAS;QACT,UAAU;QACV,MAAM;YAAC,UAAU,CAAC,EAAE;YAAE,UAAU,CAAC,EAAE;SAAC;QACpC,oBAAoB;QACpB,oBAAoB;QACpB,SAAS;IACX;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,WAAW;QACX,WAAW;QACX,SAAS;QACT,UAAU;QACV,MAAM;YAAC,UAAU,CAAC,EAAE;YAAE,UAAU,CAAC,EAAE;SAAC;QACpC,oBAAoB;QACpB,oBAAoB;QACpB,SAAS;IACX;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,WAAW;QACX,WAAW;QACX,SAAS;QACT,UAAU;QACV,MAAM;YAAC,UAAU,CAAC,EAAE;YAAE,UAAU,CAAC,EAAE;SAAC;QACpC,oBAAoB;QACpB,oBAAoB;QACpB,SAAS;IACX;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,WAAW;QACX,WAAW;QACX,SAAS;QACT,UAAU;QACV,MAAM;YAAC,UAAU,CAAC,EAAE;SAAC;QACrB,oBAAoB;QACpB,oBAAoB;IACtB;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,WAAW;QACX,WAAW;QACX,SAAS;QACT,UAAU;QACV,MAAM;YAAC,UAAU,CAAC,EAAE;YAAE,UAAU,CAAC,EAAE;SAAC;QACpC,oBAAoB;QACpB,oBAAoB;QACpB,SAAS;IACX;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,WAAW;QACX,WAAW;QACX,SAAS;QACT,UAAU;QACV,MAAM;YAAC,UAAU,CAAC,EAAE;SAAC;QACrB,oBAAoB;QACpB,oBAAoB;IACtB;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,WAAW;QACX,WAAW;QACX,SAAS;QACT,UAAU;QACV,MAAM;YAAC,UAAU,CAAC,EAAE;YAAE,UAAU,CAAC,EAAE;SAAC;QACpC,oBAAoB;QACpB,oBAAoB;QACpB,SAAS;IACX;CACD","debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///home/thecoderbee/Documents/my_projects/flowdo/frontend/flowdo/src/components/pomodoro/pomodoro-timer.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Play, Pause, SkipForward, RefreshCcw } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { Button } from '@/components/ui/button';\n\ninterface PomodoroTimerProps {\n  duration: number; // in seconds\n  onComplete: () => void;\n  onSkip?: () => void;\n  isPaused?: boolean;\n  size?: 'sm' | 'md' | 'lg';\n  className?: string;\n  initialRemainingTime?: number;\n}\n\nexport function PomodoroTimer({\n  duration,\n  onComplete,\n  onSkip,\n  isPaused: externalIsPaused,\n  size = 'md',\n  className,\n  initialRemainingTime\n}: PomodoroTimerProps) {\n  const [remainingTime, setRemainingTime] = useState(initialRemainingTime || duration);\n  const [isActive, setIsActive] = useState(!externalIsPaused);\n  const [isPaused, setIsPaused] = useState(externalIsPaused || false);\n  \n  // Calculate dimensions based on size\n  const dimensions = {\n    sm: { size: 120, strokeWidth: 6, fontSize: 'text-xl' },\n    md: { size: 200, strokeWidth: 8, fontSize: 'text-3xl' },\n    lg: { size: 300, strokeWidth: 10, fontSize: 'text-5xl' },\n  }[size];\n  \n  // Calculate SVG properties\n  const radius = (dimensions.size / 2) - (dimensions.strokeWidth * 1.5);\n  const circumference = 2 * Math.PI * radius;\n  const strokeDashoffset = circumference * (1 - remainingTime / duration);\n  \n  // Format time as mm:ss\n  const formatTime = (timeInSeconds: number) => {\n    const minutes = Math.floor(timeInSeconds / 60);\n    const seconds = timeInSeconds % 60;\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n  \n  // Handle external pause state changes\n  useEffect(() => {\n    if (externalIsPaused !== undefined) {\n      setIsPaused(externalIsPaused);\n      setIsActive(!externalIsPaused);\n    }\n  }, [externalIsPaused]);\n  \n  // Countdown timer effect\n  useEffect(() => {\n    if (!isActive || remainingTime <= 0) return;\n    \n    const intervalId = setInterval(() => {\n      setRemainingTime(prev => {\n        if (prev <= 1) {\n          clearInterval(intervalId);\n          onComplete();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    \n    return () => clearInterval(intervalId);\n  }, [isActive, remainingTime, onComplete]);\n  \n  // Handle play/pause\n  const togglePlayPause = () => {\n    setIsPaused(!isPaused);\n    setIsActive(!isActive);\n  };\n  \n  // Handle skip\n  const handleSkip = () => {\n    if (onSkip) {\n      onSkip();\n    }\n  };\n  \n  // Reset timer\n  const resetTimer = () => {\n    setRemainingTime(duration);\n    setIsPaused(true);\n    setIsActive(false);\n  };\n  \n  // Calculate progress percentage\n  const progressPercentage = (remainingTime / duration) * 100;\n  \n  return (\n    <div className={cn(\"flex flex-col items-center\", className)}>\n      <div className=\"relative flex items-center justify-center\">\n        {/* Background circle */}\n        <svg\n          width={dimensions.size}\n          height={dimensions.size}\n          viewBox={`0 0 ${dimensions.size} ${dimensions.size}`}\n          className=\"transform -rotate-90\"\n        >\n          <circle\n            cx={dimensions.size / 2}\n            cy={dimensions.size / 2}\n            r={radius}\n            strokeWidth={dimensions.strokeWidth}\n            stroke=\"currentColor\"\n            fill=\"transparent\"\n            className=\"text-accent/30\"\n          />\n          \n          {/* Progress circle */}\n          <circle\n            cx={dimensions.size / 2}\n            cy={dimensions.size / 2}\n            r={radius}\n            strokeWidth={dimensions.strokeWidth}\n            stroke=\"currentColor\"\n            fill=\"transparent\"\n            strokeDasharray={circumference}\n            strokeDashoffset={strokeDashoffset}\n            strokeLinecap=\"round\"\n            className={cn(\n              \"transition-all duration-300\",\n              progressPercentage > 75 ? \"text-primary\" : \n              progressPercentage > 50 ? \"text-purple-500\" :\n              progressPercentage > 25 ? \"text-yellow-500\" : \"text-red-500\"\n            )}\n          />\n        </svg>\n        \n        {/* Timer text */}\n        <div className=\"absolute flex flex-col items-center\">\n          <div className={cn(\"font-semibold\", dimensions.fontSize)}>\n            {formatTime(remainingTime)}\n          </div>\n          <div className=\"text-sm text-muted-foreground mt-2\">\n            remaining\n          </div>\n        </div>\n      </div>\n      \n      {/* Controls */}\n      <div className=\"flex items-center justify-center gap-3 mt-6\">\n        <Button\n          size=\"icon\"\n          variant=\"outline\"\n          className=\"rounded-full w-12 h-12\" \n          onClick={resetTimer}\n        >\n          <RefreshCcw className=\"h-5 w-5\" />\n          <span className=\"sr-only\">Reset Timer</span>\n        </Button>\n        \n        <Button\n          size=\"icon\"\n          variant={isPaused ? \"default\" : \"secondary\"}\n          className=\"rounded-full w-14 h-14\" \n          onClick={togglePlayPause}\n        >\n          {isPaused ? (\n            <Play className=\"h-6 w-6 ml-1\" />\n          ) : (\n            <Pause className=\"h-6 w-6\" />\n          )}\n          <span className=\"sr-only\">\n            {isPaused ? \"Start\" : \"Pause\"}\n          </span>\n        </Button>\n        \n        {onSkip && (\n          <Button\n            size=\"icon\"\n            variant=\"outline\"\n            className=\"rounded-full w-12 h-12\"\n            onClick={handleSkip}\n          >\n            <SkipForward className=\"h-5 w-5\" />\n            <span className=\"sr-only\">Skip</span>\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 457, "column": 0}, "map": {"version":3,"sources":["file:///home/thecoderbee/Documents/my_projects/flowdo/frontend/flowdo/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,gLACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 589, "column": 0}, "map": {"version":3,"sources":["file:///home/thecoderbee/Documents/my_projects/flowdo/frontend/flowdo/src/components/pomodoro/pomodoro-form.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { Task, sampleTasks } from '@/sample/tasks';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Clock, Coffee, Timer } from 'lucide-react';\n\nexport interface PomodoroSettings {\n  taskId: string | null;\n  focusDuration: number; // in seconds\n  breakDuration: number; // in seconds\n  sessionsCount: number;\n}\n\ninterface PomodoroFormProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onSubmit: (settings: PomodoroSettings) => void;\n  initialSettings?: Partial<PomodoroSettings>;\n  tasks: Task[];\n}\n\nexport function PomodoroForm({ \n  open, \n  onOpenChange, \n  onSubmit, \n  initialSettings,\n  tasks\n}: PomodoroFormProps) {\n  const defaultSettings: PomodoroSettings = {\n    taskId: null,\n    focusDuration: 25 * 60, // 25 minutes in seconds\n    breakDuration: 5 * 60, // 5 minutes in seconds\n    sessionsCount: 4,\n  };\n  \n  const [settings, setSettings] = useState<PomodoroSettings>({\n    ...defaultSettings,\n    ...initialSettings\n  });\n  \n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>\n  ) => {\n    const { name, value } = e.target;\n    \n    if (name === 'focusDurationMinutes') {\n      setSettings({\n        ...settings,\n        focusDuration: parseInt(value) * 60\n      });\n    } else if (name === 'breakDurationMinutes') {\n      setSettings({\n        ...settings,\n        breakDuration: parseInt(value) * 60\n      });\n    } else {\n      setSettings({\n        ...settings,\n        [name]: value\n      });\n    }\n  };\n  \n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSubmit(settings);\n    onOpenChange(false);\n  };\n  \n  // Convert seconds to minutes for form display\n  const focusDurationMinutes = Math.floor(settings.focusDuration / 60);\n  const breakDurationMinutes = Math.floor(settings.breakDuration / 60);\n  \n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-md\">\n        <DialogHeader>\n          <DialogTitle className=\"text-xl\">Set Up Pomodoro</DialogTitle>\n        </DialogHeader>\n        \n        <form onSubmit={handleSubmit} className=\"space-y-5 mt-4\">\n          {/* Task Selection */}\n          <div className=\"space-y-2\">\n            <label htmlFor=\"taskId\" className=\"flex items-center text-base font-medium\">\n              <Timer className=\"mr-2 h-5 w-5 text-primary\" />\n              Select Task\n            </label>\n            <select\n              id=\"taskId\"\n              name=\"taskId\"\n              value={settings.taskId || ''}\n              onChange={handleChange}\n              className=\"w-full rounded-md border border-border px-3 py-2.5 text-base focus:outline-none focus:ring-1 focus:ring-primary bg-background\"\n            >\n              <option value=\"\">No Specific Task</option>\n              {tasks.map(task => (\n                <option key={task.id} value={task.id}>\n                  {task.title} ({task.completedPomodoros}/{task.estimatedPomodoros})\n                </option>\n              ))}\n            </select>\n          </div>\n          \n          {/* Focus Duration */}\n          <div className=\"space-y-2\">\n            <label htmlFor=\"focusDurationMinutes\" className=\"flex items-center text-base font-medium\">\n              <Clock className=\"mr-2 h-5 w-5 text-primary\" />\n              Focus Duration (minutes)\n            </label>\n            <div className=\"flex items-center\">\n              <input\n                id=\"focusDurationMinutes\"\n                name=\"focusDurationMinutes\"\n                type=\"range\"\n                min=\"5\"\n                max=\"60\"\n                step=\"5\"\n                value={focusDurationMinutes}\n                onChange={handleChange}\n                className=\"flex-1 h-2 rounded-full accent-primary bg-accent\"\n              />\n              <span className=\"w-16 text-center text-base ml-3\">{focusDurationMinutes} min</span>\n            </div>\n            \n            <div className=\"flex justify-between mt-2\">\n              <button \n                type=\"button\" \n                className=\"text-sm text-muted-foreground px-2 py-1 hover:bg-accent rounded-md\"\n                onClick={() => setSettings({...settings, focusDuration: 15 * 60})}\n              >\n                15m\n              </button>\n              <button \n                type=\"button\" \n                className=\"text-sm text-muted-foreground px-2 py-1 hover:bg-accent rounded-md\"\n                onClick={() => setSettings({...settings, focusDuration: 25 * 60})}\n              >\n                25m\n              </button>\n              <button \n                type=\"button\" \n                className=\"text-sm text-muted-foreground px-2 py-1 hover:bg-accent rounded-md\"\n                onClick={() => setSettings({...settings, focusDuration: 45 * 60})}\n              >\n                45m\n              </button>\n              <button \n                type=\"button\" \n                className=\"text-sm text-muted-foreground px-2 py-1 hover:bg-accent rounded-md\"\n                onClick={() => setSettings({...settings, focusDuration: 60 * 60})}\n              >\n                60m\n              </button>\n            </div>\n          </div>\n          \n          {/* Break Duration */}\n          <div className=\"space-y-2\">\n            <label htmlFor=\"breakDurationMinutes\" className=\"flex items-center text-base font-medium\">\n              <Coffee className=\"mr-2 h-5 w-5 text-primary\" />\n              Break Duration (minutes)\n            </label>\n            <div className=\"flex items-center\">\n              <input\n                id=\"breakDurationMinutes\"\n                name=\"breakDurationMinutes\"\n                type=\"range\"\n                min=\"1\"\n                max=\"30\"\n                step=\"1\"\n                value={breakDurationMinutes}\n                onChange={handleChange}\n                className=\"flex-1 h-2 rounded-full accent-primary bg-accent\"\n              />\n              <span className=\"w-16 text-center text-base ml-3\">{breakDurationMinutes} min</span>\n            </div>\n            \n            <div className=\"flex justify-between mt-2\">\n              <button \n                type=\"button\" \n                className=\"text-sm text-muted-foreground px-2 py-1 hover:bg-accent rounded-md\"\n                onClick={() => setSettings({...settings, breakDuration: 3 * 60})}\n              >\n                3m\n              </button>\n              <button \n                type=\"button\" \n                className=\"text-sm text-muted-foreground px-2 py-1 hover:bg-accent rounded-md\"\n                onClick={() => setSettings({...settings, breakDuration: 5 * 60})}\n              >\n                5m\n              </button>\n              <button \n                type=\"button\" \n                className=\"text-sm text-muted-foreground px-2 py-1 hover:bg-accent rounded-md\"\n                onClick={() => setSettings({...settings, breakDuration: 10 * 60})}\n              >\n                10m\n              </button>\n              <button \n                type=\"button\" \n                className=\"text-sm text-muted-foreground px-2 py-1 hover:bg-accent rounded-md\"\n                onClick={() => setSettings({...settings, breakDuration: 15 * 60})}\n              >\n                15m\n              </button>\n            </div>\n          </div>\n          \n          {/* Sessions Count */}\n          <div className=\"space-y-2\">\n            <label htmlFor=\"sessionsCount\" className=\"flex items-center text-base font-medium\">\n              <span className=\"mr-2 bg-primary/10 text-primary rounded-md p-1 text-sm font-bold\">#</span>\n              Number of Sessions\n            </label>\n            <div className=\"flex items-center\">\n              <input\n                id=\"sessionsCount\"\n                name=\"sessionsCount\"\n                type=\"range\"\n                min=\"1\"\n                max=\"10\"\n                value={settings.sessionsCount}\n                onChange={handleChange}\n                className=\"flex-1 h-2 rounded-full accent-primary bg-accent\"\n              />\n              <span className=\"w-16 text-center text-base ml-3\">{settings.sessionsCount}</span>\n            </div>\n            \n            <div className=\"flex justify-between mt-2\">\n              <button \n                type=\"button\" \n                className=\"text-sm text-muted-foreground px-2 py-1 hover:bg-accent rounded-md\"\n                onClick={() => setSettings({...settings, sessionsCount: 2})}\n              >\n                2\n              </button>\n              <button \n                type=\"button\" \n                className=\"text-sm text-muted-foreground px-2 py-1 hover:bg-accent rounded-md\"\n                onClick={() => setSettings({...settings, sessionsCount: 4})}\n              >\n                4\n              </button>\n              <button \n                type=\"button\" \n                className=\"text-sm text-muted-foreground px-2 py-1 hover:bg-accent rounded-md\"\n                onClick={() => setSettings({...settings, sessionsCount: 6})}\n              >\n                6\n              </button>\n              <button \n                type=\"button\" \n                className=\"text-sm text-muted-foreground px-2 py-1 hover:bg-accent rounded-md\"\n                onClick={() => setSettings({...settings, sessionsCount: 8})}\n              >\n                8\n              </button>\n            </div>\n          </div>\n          \n          {/* Total Time Calculation */}\n          <div className=\"p-4 bg-accent/20 rounded-md text-center\">\n            <div className=\"text-muted-foreground mb-1\">Total Work Time</div>\n            <div className=\"text-lg font-bold\">\n              {Math.floor((settings.focusDuration * settings.sessionsCount) / 60)} minutes\n            </div>\n          </div>\n          \n          <DialogFooter>\n            <Button \n              type=\"button\" \n              variant=\"outline\" \n              onClick={() => onOpenChange(false)}\n              className=\"text-base\"\n            >\n              Cancel\n            </Button>\n            <Button \n              type=\"submit\" \n              className=\"text-base\"\n            >\n              Start Pomodoro\n            </Button>\n          </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1176, "column": 0}, "map": {"version":3,"sources":["file:///home/thecoderbee/Documents/my_projects/flowdo/frontend/flowdo/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1273, "column": 0}, "map": {"version":3,"sources":["file:///home/thecoderbee/Documents/my_projects/flowdo/frontend/flowdo/src/components/pomodoro/pomodoro-controller.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { PomodoroTimer } from './pomodoro-timer';\nimport { PomodoroForm, PomodoroSettings } from './pomodoro-form';\nimport { Task } from '@/sample/tasks';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Bell, Check, Clock, Settings } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\nexport type PomodoroStatus = 'idle' | 'focus' | 'break' | 'completed';\n\nexport interface PomodoroSessionProps {\n  tasks: Task[];\n  onCompletePomodoro?: (taskId: string) => void;\n}\n\nexport function PomodoroController({ tasks, onCompletePomodoro }: PomodoroSessionProps) {\n  const router = useRouter();\n  const [showForm, setShowForm] = useState<boolean>(false);\n  const [status, setStatus] = useState<PomodoroStatus>('idle');\n  const [settings, setSettings] = useState<PomodoroSettings | null>(null);\n  const [currentSession, setCurrentSession] = useState<number>(1);\n  const [isPaused, setIsPaused] = useState<boolean>(false);\n  \n  // Find the current task if one is selected\n  const currentTask = settings?.taskId \n    ? tasks.find(t => t.id === settings.taskId) \n    : null;\n  \n  // Handle starting a new Pomodoro session\n  const handleStart = (newSettings: PomodoroSettings) => {\n    setSettings(newSettings);\n    setCurrentSession(1);\n    setStatus('focus');\n    setIsPaused(false);\n    \n    // Request notification permission if not yet granted\n    if (typeof window !== 'undefined' && Notification.permission === 'default') {\n      Notification.requestPermission();\n    }\n  };\n  \n  // Handle completing a focus session\n  const handleFocusComplete = () => {\n    // Play sound\n    try {\n      const audio = new Audio('/sounds/bell.mp3');\n      audio.play().catch(() => {\n        // Fallback for browsers that block autoplay\n        console.log('Audio play was prevented');\n      });\n    } catch (error) {\n      console.error('Error playing sound:', error);\n    }\n    \n    // Send notification\n    if (typeof window !== 'undefined' && Notification.permission === 'granted') {\n      new Notification('Focus session completed!', {\n        body: 'Time for a break.',\n        icon: '/images/brand/logo-nobg.png'\n      });\n    }\n    \n    // Update completed pomodoro count if task is selected\n    if (settings?.taskId && onCompletePomodoro) {\n      onCompletePomodoro(settings.taskId);\n    }\n    \n    // If this was the last session, complete the whole thing\n    if (settings && currentSession >= settings.sessionsCount) {\n      setStatus('completed');\n    } else {\n      setStatus('break');\n    }\n  };\n  \n  // Handle completing a break\n  const handleBreakComplete = () => {\n    // Play sound\n    try {\n      const audio = new Audio('/sounds/bell.mp3');\n      audio.play().catch(() => {\n        console.log('Audio play was prevented');\n      });\n    } catch (error) {\n      console.error('Error playing sound:', error);\n    }\n    \n    // Send notification\n    if (typeof window !== 'undefined' && Notification.permission === 'granted') {\n      new Notification('Break time is over!', {\n        body: 'Time to focus again.',\n        icon: '/images/brand/logo-nobg.png'\n      });\n    }\n    \n    setCurrentSession(currentSession + 1);\n    setStatus('focus');\n  };\n  \n  // Handle skipping current session\n  const handleSkip = () => {\n    if (status === 'focus') {\n      handleFocusComplete();\n    } else if (status === 'break') {\n      handleBreakComplete();\n    }\n  };\n  \n  // Reset session\n  const handleReset = () => {\n    setStatus('idle');\n    setSettings(null);\n    setCurrentSession(1);\n  };\n  \n  // Toggle pause state\n  const handleTogglePause = () => {\n    setIsPaused(!isPaused);\n  };\n  \n  // Return to task if task is selected\n  const handleGoToTask = () => {\n    if (settings?.taskId) {\n      router.push(`/tasks?id=${settings.taskId}`);\n    }\n  };\n  \n  return (\n    <div className=\"mx-auto max-w-3xl\">\n      {status === 'idle' ? (\n        <div className=\"space-y-6\">\n          <div className=\"text-center\">\n            <h1 className=\"text-3xl font-bold mb-2\">Pomodoro Timer</h1>\n            <p className=\"text-muted-foreground\">\n              Use the Pomodoro Technique to boost your productivity\n            </p>\n          </div>\n          \n          <Card className=\"border-2 border-dashed border-border\">\n            <CardHeader className=\"pb-2\">\n              <CardTitle className=\"text-xl flex items-center\">\n                <Settings className=\"w-5 h-5 mr-2\" /> Configure Your Session\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <Button \n                onClick={() => setShowForm(true)}\n                className=\"w-full text-lg\"\n                size=\"lg\"\n              >\n                Start New Pomodoro\n              </Button>\n            </CardContent>\n          </Card>\n          \n          {/* Quick Start Options */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-8\">\n            <Card \n              className=\"border cursor-pointer hover:border-primary transition-colors\"\n              onClick={() => handleStart({\n                taskId: null,\n                focusDuration: 25 * 60,\n                breakDuration: 5 * 60,\n                sessionsCount: 4\n              })}\n            >\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-lg\">Quick Start</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-1 gap-1 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>Focus:</span>\n                    <span className=\"font-medium\">25 mins</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Break:</span>\n                    <span className=\"font-medium\">5 mins</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Sessions:</span>\n                    <span className=\"font-medium\">4</span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n            \n            <Card \n              className=\"border cursor-pointer hover:border-primary transition-colors\"\n              onClick={() => handleStart({\n                taskId: null,\n                focusDuration: 45 * 60,\n                breakDuration: 10 * 60,\n                sessionsCount: 3\n              })}\n            >\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-lg\">Extended Focus</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-1 gap-1 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>Focus:</span>\n                    <span className=\"font-medium\">45 mins</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Break:</span>\n                    <span className=\"font-medium\">10 mins</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Sessions:</span>\n                    <span className=\"font-medium\">3</span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n            \n            <Card \n              className=\"border cursor-pointer hover:border-primary transition-colors\"\n              onClick={() => handleStart({\n                taskId: null,\n                focusDuration: 15 * 60,\n                breakDuration: 3 * 60,\n                sessionsCount: 6\n              })}\n            >\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-lg\">Short Bursts</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-1 gap-1 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>Focus:</span>\n                    <span className=\"font-medium\">15 mins</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Break:</span>\n                    <span className=\"font-medium\">3 mins</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Sessions:</span>\n                    <span className=\"font-medium\">6</span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      ) : (\n        <div className=\"space-y-6\">\n          {/* Session status indicator */}\n          <div className=\"flex items-center justify-between mb-4\">\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={handleReset}\n              className=\"rounded-full h-9 w-9\"\n            >\n              <span className=\"sr-only\">Return</span>\n              <svg \n                xmlns=\"http://www.w3.org/2000/svg\" \n                width=\"20\" \n                height=\"20\" \n                viewBox=\"0 0 24 24\" \n                fill=\"none\" \n                stroke=\"currentColor\" \n                strokeWidth=\"2\" \n                strokeLinecap=\"round\" \n                strokeLinejoin=\"round\"\n              >\n                <polyline points=\"15 18 9 12 15 6\" />\n              </svg>\n            </Button>\n            \n            <div className=\"text-center\">\n              {status === 'focus' && (\n                <h2 className=\"text-xl font-medium\">\n                  Focus Session {currentSession}/{settings?.sessionsCount || 1}\n                </h2>\n              )}\n              {status === 'break' && (\n                <h2 className=\"text-xl font-medium\">\n                  Break Time {currentSession}/{settings?.sessionsCount || 1}\n                </h2>\n              )}\n              {status === 'completed' && (\n                <h2 className=\"text-xl font-medium\">\n                  Session Completed!\n                </h2>\n              )}\n            </div>\n            \n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={() => setShowForm(true)}\n              className=\"rounded-full h-9 w-9\"\n            >\n              <span className=\"sr-only\">Settings</span>\n              <Settings className=\"h-5 w-5\" />\n            </Button>\n          </div>\n          \n          {/* Task info if present */}\n          {currentTask && (\n            <Card \n              className=\"border mb-4 cursor-pointer hover:border-primary transition-all\"\n              onClick={handleGoToTask}\n            >\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-center\">\n                  <div className=\"flex-grow\">\n                    <h3 className=\"font-medium text-lg\">Current Task</h3>\n                    <p className=\"text-muted-foreground text-base truncate\">\n                      {currentTask.title}\n                    </p>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <Clock className=\"h-4 w-4 mr-1 text-muted-foreground\" />\n                    <span className=\"text-sm text-muted-foreground\">\n                      {currentTask.completedPomodoros}/{currentTask.estimatedPomodoros}\n                    </span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n          \n          <div className=\"flex flex-col items-center justify-center\">\n            {status === 'focus' && settings && (\n              <PomodoroTimer\n                duration={settings.focusDuration}\n                onComplete={handleFocusComplete}\n                onSkip={handleSkip}\n                isPaused={isPaused}\n                size=\"lg\"\n                className=\"mb-4\"\n              />\n            )}\n            \n            {status === 'break' && settings && (\n              <PomodoroTimer\n                duration={settings.breakDuration}\n                onComplete={handleBreakComplete}\n                onSkip={handleSkip}\n                isPaused={isPaused}\n                size=\"lg\"\n                className=\"mb-4\"\n              />\n            )}\n            \n            {status === 'completed' && (\n              <div className=\"text-center py-10\">\n                <div className=\"inline-flex items-center justify-center rounded-full bg-green-100 dark:bg-green-900 p-6 mb-6\">\n                  <Check className=\"h-12 w-12 text-green-700 dark:text-green-300\" />\n                </div>\n                <h3 className=\"text-2xl font-bold mb-2\">Great job!</h3>\n                <p className=\"text-muted-foreground mb-6\">\n                  You've completed all your pomodoro sessions.\n                </p>\n                \n                <div className=\"flex flex-col sm:flex-row gap-3 justify-center mt-4\">\n                  <Button \n                    variant=\"outline\" \n                    size=\"lg\" \n                    onClick={() => {\n                      if (settings) {\n                        handleStart(settings);\n                      }\n                    }}\n                  >\n                    Repeat Session\n                  </Button>\n                  <Button size=\"lg\" onClick={handleReset}>\n                    New Session\n                  </Button>\n                </div>\n              </div>\n            )}\n            \n            {/* Session controls */}\n            {(status === 'focus' || status === 'break') && (\n              <div className=\"flex gap-4\">\n                <Button\n                  variant=\"ghost\"\n                  size=\"lg\"\n                  className=\"text-muted-foreground\"\n                  onClick={handleTogglePause}\n                >\n                  {isPaused ? 'Resume' : 'Pause'}\n                </Button>\n                <Button\n                  size=\"lg\"\n                  onClick={handleSkip}\n                >\n                  Skip\n                </Button>\n              </div>\n            )}\n          </div>\n          \n          {/* Session progress indicators */}\n          {(status === 'focus' || status === 'break') && settings && (\n            <div className=\"flex justify-center gap-2 mt-6\">\n              {Array.from({ length: settings.sessionsCount }).map((_, index) => {\n                // Current session is active\n                const isCurrent = index + 1 === currentSession;\n                // Past sessions are completed\n                const isCompleted = index + 1 < currentSession;\n                // Session is focus or break\n                const isBreak = index + 1 === currentSession && status === 'break';\n                \n                return (\n                  <div \n                    key={index}\n                    className={cn(\n                      \"w-3 h-3 rounded-full transition-all\",\n                      isBreak ? \"bg-blue-500\" :\n                      isCurrent ? \"bg-primary ring-2 ring-primary/30\" :\n                      isCompleted ? \"bg-green-500\" : \n                      \"bg-accent\"\n                    )}\n                  />\n                );\n              })}\n            </div>\n          )}\n        </div>\n      )}\n      \n      {/* Pomodoro Setup Form */}\n      {showForm && (\n        <PomodoroForm\n          open={showForm}\n          onOpenChange={setShowForm}\n          onSubmit={handleStart}\n          initialSettings={settings || undefined}\n          tasks={tasks}\n        />\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2219, "column": 0}, "map": {"version":3,"sources":["file:///home/thecoderbee/Documents/my_projects/flowdo/frontend/flowdo/src/components/pomodoro/index.ts"],"sourcesContent":["export { PomodoroTimer } from './pomodoro-timer';\nexport { PomodoroForm, type PomodoroSettings } from './pomodoro-form';\nexport { PomodoroController, type PomodoroSessionProps } from './pomodoro-controller'; "],"names":[],"mappings":";AAAA;AACA;AACA","debugId":null}},
    {"offset": {"line": 2243, "column": 0}, "map": {"version":3,"sources":["file:///home/thecoderbee/Documents/my_projects/flowdo/frontend/flowdo/src/app/pomodoro/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { sampleTasks, Task } from '@/sample/tasks';\nimport { PomodoroController } from '@/components/pomodoro';\nimport { useSearchParams } from 'next/navigation';\n\nexport default function PomodoroPage() {\n  const [tasks, setTasks] = useState<Task[]>(sampleTasks);\n  const searchParams = useSearchParams();\n  const taskId = searchParams.get('taskId');\n  \n  const handleCompletePomodoro = (taskId: string) => {\n    setTasks(prevTasks => \n      prevTasks.map(task => {\n        if (task.id === taskId) {\n          // Don't exceed the estimated count\n          const newCount = Math.min(\n            task.completedPomodoros + 1, \n            task.estimatedPomodoros\n          );\n          \n          return {\n            ...task,\n            completedPomodoros: newCount\n          };\n        }\n        return task;\n      })\n    );\n  };\n  \n  return (\n    <div className=\"container p-4 md:p-6\">\n      <div className=\"mb-6\">\n        <h1 className=\"text-3xl font-bold text-center\">Pomodoro Timer</h1>\n      </div>\n      \n      <PomodoroController \n        tasks={tasks}\n        onCompletePomodoro={handleCompletePomodoro}\n      />\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AACA;AALA;;;;;;AAOe,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU,sHAAA,CAAA,cAAW;IACtD,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IACnC,MAAM,SAAS,aAAa,GAAG,CAAC;IAEhC,MAAM,yBAAyB,CAAC;QAC9B,SAAS,CAAA,YACP,UAAU,GAAG,CAAC,CAAA;gBACZ,IAAI,KAAK,EAAE,KAAK,QAAQ;oBACtB,mCAAmC;oBACnC,MAAM,WAAW,KAAK,GAAG,CACvB,KAAK,kBAAkB,GAAG,GAC1B,KAAK,kBAAkB;oBAGzB,OAAO;wBACL,GAAG,IAAI;wBACP,oBAAoB;oBACtB;gBACF;gBACA,OAAO;YACT;IAEJ;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAG,WAAU;8BAAiC;;;;;;;;;;;0BAGjD,8OAAC,wJAAA,CAAA,qBAAkB;gBACjB,OAAO;gBACP,oBAAoB;;;;;;;;;;;;AAI5B","debugId":null}}]
}